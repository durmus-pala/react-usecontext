{"version":3,"sources":["context/StudentContext.js","components/StudentItem.js","components/StudentList.js","App.js","reportWebVitals.js","index.js"],"names":["StudentContext","createContext","StudentItem","student","changeColor","useContext","style","background","color","paddingBottom","paddingTop","marginBottom","name","email","age","value","onChange","e","id","target","StudentList","students","map","data","App","useState","setStudents","Provider","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAEaA,EAAiBC,0B,OCafC,EAbK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbC,EAAgBC,qBAAWL,GAA3BI,YAER,OACE,sBAAKE,MAAO,CAAEC,WAAYJ,EAAQK,MAAOC,cAAe,OAAQC,WAAY,OAAQC,aAAc,QAAlG,UACE,6BAAKR,EAAQS,OACb,wCAAWT,EAAQU,SACnB,sCAASV,EAAQW,OAHnB,UAIS,uBAAOC,MAAOZ,EAAQK,MAAOQ,SAAU,SAACC,GAAD,OAAOb,EAAYD,EAAQe,GAAID,EAAEE,OAAOJ,cCM7EK,EAZK,WAAO,IACjBC,EAAahB,qBAAWL,GAAxBqB,SACR,OACE,qCACE,8CACCA,EAASC,KAAI,SAACnB,GAAD,OACZ,cAAC,EAAD,CAAgCA,QAASA,GAAvBA,EAAQS,aCN5BW,EAAO,CACX,CAAEL,GAAI,EAAGN,KAAM,iBAAkBC,MAAO,iBAAkBC,IAAK,GAAIN,MAAO,aAC1E,CAAEU,GAAI,EAAGN,KAAM,mBAAoBC,MAAO,oBAAqBC,IAAK,GAAIN,MAAO,YAC/E,CAAEU,GAAI,EAAGN,KAAM,mBAAoBC,MAAO,mBAAoBC,IAAK,GAAIN,MAAO,cAqBjEgB,EAlBH,WAAO,IAAD,EACgBC,mBAASF,GADzB,mBACTF,EADS,KACCK,EADD,KAMhB,OACE,cAAC1B,EAAe2B,SAAhB,CAAyBZ,MAAO,CAAEM,WAAUjB,YAJ1B,SAACc,EAAIV,GAAL,OAClBkB,EAAYL,EAASC,KAAI,SAACnB,GAAD,OAAcA,EAAQe,KAAOA,EAAf,2BAAyBf,GAAzB,IAAkCK,MAAOA,IAAUL,QAG1F,SACE,sBAAKyB,UAAU,MAAf,UACE,iCACE,4CAEF,cAAC,EAAD,UCVOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2574def7.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const StudentContext = createContext()\r\n","import { useContext } from 'react'\r\nimport { StudentContext } from '../context/StudentContext'\r\nconst StudentItem = ({ student }) => {\r\n  const { changeColor } = useContext(StudentContext)\r\n\r\n  return (\r\n    <div style={{ background: student.color, paddingBottom: '2rem', paddingTop: '1rem', marginBottom: '1rem' }}>\r\n      <h3>{student.name}</h3>\r\n      <p>Email: {student.email}</p>\r\n      <p>Age: {student.age}</p>\r\n      Color: <input value={student.color} onChange={(e) => changeColor(student.id, e.target.value)} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudentItem\r\n","import { useContext } from 'react'\r\nimport StudentItem from './StudentItem'\r\nimport { StudentContext } from '../context/StudentContext'\r\n\r\nconst StudentList = () => {\r\n  const { students } = useContext(StudentContext)\r\n  return (\r\n    <>\r\n      <h2>Student List</h2>\r\n      {students.map((student) => (\r\n        <StudentItem key={student.name} student={student} />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StudentList\r\n","import { useState } from 'react'\r\nimport StudentList from './components/StudentList'\r\nimport { StudentContext } from './context/StudentContext'\r\n\r\nconst data = [\r\n  { id: 1, name: 'Jason Response', email: 'jason@mail.com', age: 23, color: 'lightcyan' },\r\n  { id: 2, name: 'Benjamin Evalent', email: 'benjamin@mail.com', age: 20, color: 'honeydew' },\r\n  { id: 3, name: 'Malcolm Function', email: 'malcolm@mail.com', age: 21, color: 'mistyrose' }\r\n]\r\n\r\nconst App = () => {\r\n  const [students, setStudents] = useState(data)\r\n\r\n  const changeColor = (id, color) =>\r\n    setStudents(students.map((student) => (student.id === id ? { ...student, color: color } : student)))\r\n\r\n  return (\r\n    <StudentContext.Provider value={{ students, changeColor }}>\r\n      <div className=\"App\">\r\n        <header>\r\n          <h1>Welcome!</h1>\r\n        </header>\r\n        <StudentList />\r\n      </div>\r\n    </StudentContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}